// Removing standard placeholder when using castlecss-forms
/*! autoprefixer: off */
::-webkit-input-placeholder {
	opacity: 0;
}

:-moz-placeholder,
::-moz-placeholder {
	opacity: 0;
}

:-ms-input-placeholder {
	color: transparent;
}
/*! autoprefixer: on */

/* Placeholders Start */
%label-default {
	color: $input-label-color;
	cursor: text;
	font-weight: normal;
	left: $margin-default;
	margin: 0;
	position: absolute;
	top: 50%;
	transform: translateY(-50%);
	z-index: 2;
}

%label-active-static {
	color: $input-label-color-focus;
	opacity: 0;
	transition: none;
}

%label-active-transition {
	opacity: 1;
	color: $input-label-color-focus;
	font-size: 65%;
	line-height: 22px;
	transform: translateY(-50%);
	transition: 0.2s ease all;
}

%label-top {
	top: 0;
	transform: translateY(0);
}

%label-bottom {
	top: 100%;
	transform: translateY(-100%);
}
%label-above {
	top: 0;
	transform: translateY(-100%);
}
/* Placeholders End */

[class^="label-"],
[class*=" label-"] {
	.input-combined {
		~ label[for] {
			margin-left: $margin-default * 3;
		}

		&.has-focus,
		&.has-value {
			label[for] {
				margin-left: $margin-default * 3;
			}

			input {
				padding: 0 $padding-default / 2 12px $padding-default;
			}
		}
	}

	.input-icon {
		label[for] {
			left: $margin-default*4.5;
		}
	}

	input,
	textarea {
		padding: $padding-default;
		vertical-align: top;
	}

	textarea {
		box-sizing: border-box;
		padding-bottom: $padding-default;
	}
}

.form-fields {

	&.label-top {
		.has-focus,
		.has-value {
			label[for] {
				@extend %label-top;
				@extend %label-active-transition;
			}

			input {
				padding: 12px $padding-default / 2 0 $padding-default;
			}

			textarea {
				padding: 18px $padding-default / 2 0 $padding-default;
			}
		}
	}

	&.label-bottom {
		.has-focus,
		.has-value {
			label[for] {
				@extend %label-bottom;
				@extend %label-active-transition;
			}

			input {
				padding: 0 $padding-default / 2 12px $padding-default;
			}

			textarea {
				padding-bottom: 18px;
			}
		}
	}

	&.label-above {
		.has-focus,
		.has-value {
			label[for] {
				@extend %label-above;
				@extend %label-active-transition;
			}

			input {
				padding: 0 $padding-default / 2 0 $padding-default;
			}

			textarea {
				padding: 12px $padding-default / 2 0 $padding-default;
			}
		}
	}

}

.form-field {
	label[for] {
		@extend %label-default;
	}

	&.has-focus,
	&.has-value {
		label[for] {
			@extend %label-active-static;
		}
	}

	&.label-top {
		&.has-focus,
		&.has-value {
			> label[for] {
				@extend %label-top;
				@extend %label-active-transition;
			}

			input {
				padding: 12px $padding-default / 2 0 $padding-default;
			}

			textarea {
				padding: 18px $padding-default / 2 0 $padding-default;
			}
		}
	}

	&.label-bottom {

		&.has-focus,
		&.has-value {
			> label[for] {
				@extend %label-bottom;
				@extend %label-active-transition;
			}

			input,
			textarea {
				padding: 0 $padding-default / 2  12px $padding-default;
			}
		}
	}

	&.label-above {

		&.has-focus,
		&.has-value {
			> label[for] {
				@extend %label-above;
				@extend %label-active-transition;
			}

			input,
			textarea {
				padding: 0 $padding-default / 2 0 $padding-default;
			}
		}
	}
}

.form-textarea {

	label[for] {
		transform: translateY(0);
		top: $margin-default;
	}

}

.label-left {

	.input-indicator {
		left: inherit;
		right: 0;
	}

	.input-control {
		@extend .cf;
		float: left;
		padding-left: 0;
		padding-right: $padding-default*2.5;
	}
}